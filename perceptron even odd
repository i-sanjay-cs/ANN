import numpy as np
from sklearn.linear_model import Perceptron

def convert_to_binary(input_list):
    binary_list = []
    for number in input_list:
        binary = [int(bit) for bit in format(number[0], '08b')]
        binary_list.append(binary)
    return binary_list

X_train = [[48], [49], [50], [51], [52], [53], [54], [55], [56], [57]]
y_train = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1]
X_test = [[50], [53], [56]]

X_train_binary = convert_to_binary(X_train)
X_test_binary = convert_to_binary(X_test)

clf = Perceptron()
clf.fit(X_train_binary, y_train)

predictions = clf.predict(X_test_binary)

# Print the predictions
for number, prediction in zip(X_test, predictions):
    print(f"ASCII: {number[0]}, Number is {'even' if prediction == 0 else 'odd'}.")
